// –£—á–µ–±–Ω–∞ –∑–∞–ª–∞ –∏–º–∞ –ø—Ä–∞–≤–æ—ä–≥—ä–ª–µ–Ω —Ä–∞–∑–º–µ—Ä w –Ω–∞ h –º–µ—Ç—Ä–∞,
// –±–µ–∑ –∫–æ–ª–æ–Ω–∏ –≤—ä–≤ –≤—ä—Ç—Ä–µ—à–Ω–æ—Å—Ç—Ç–∞ —Å–∏. –ó–∞–ª–∞—Ç–∞ –µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∞ –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏
// ‚Äì –ª—è–≤–∞ –∏ –¥—è—Å–Ω–∞, —Å –∫–æ—Ä–∏–¥–æ—Ä –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª–Ω–æ –ø–æ —Å—Ä–µ–¥–∞—Ç–∞.
// –í –ª—è–≤–∞—Ç–∞ –∏ –≤ –¥—è—Å–Ω–∞—Ç–∞ —á–∞—Å—Ç –∏–º–∞ —Ä–µ–¥–∏—Ü–∏ —Å –±—é—Ä–∞. –í –∑–∞–¥–Ω–∞—Ç–∞ —á–∞—Å—Ç –Ω–∞ –∑–∞–ª–∞—Ç–∞ –∏–º–∞
// –≥–æ–ª—è–º–∞ –≤—Ö–æ–¥–Ω–∞ –≤—Ä–∞—Ç–∞. –í –ø—Ä–µ–¥–Ω–∞—Ç–∞ —á–∞—Å—Ç –Ω–∞ –∑–∞–ª–∞—Ç–∞ –∏–º–∞ –∫–∞—Ç–µ–¥—Ä–∞ —Å –ø–æ–¥–∏—É–º –∑–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.
// –ï–¥–Ω–æ —Ä–∞–±–æ—Ç–Ω–æ –º—è—Å—Ç–æ –∑–∞–µ–º–∞ 70 –Ω–∞ 120 cm (–º–∞—Å–∞ —Å —Ä–∞–∑–º–µ—Ä 70 –Ω–∞ 40 cm + –º—è—Å—Ç–æ –∑–∞ —Å—Ç–æ–ª –∏
// –ø—Ä–µ–º–∏–Ω–∞–≤–∞–Ω–µ —Å —Ä–∞–∑–º–µ—Ä 70 –Ω–∞ 80 cm). –ö–æ—Ä–∏–¥–æ—Ä—ä—Ç –µ —à–∏—Ä–æ–∫ –ø–æ–Ω–µ 100 cm.
// –ò–∑—á–∏—Å–ª–µ–Ω–æ –µ, —á–µ –∑–∞—Ä–∞–¥–∏ –≤—Ö–æ–¥–Ω–∞—Ç–∞ –≤—Ä–∞—Ç–∞ (–∫–æ—è—Ç–æ –µ —Å –æ—Ç–≤–æ—Ä 160 cm) —Å–µ –≥—É–±–∏ —Ç–æ—á–Ω–æ 1 —Ä–∞–±–æ—Ç–Ω–æ –º—è—Å—Ç–æ,
// –∞ –∑–∞—Ä–∞–¥–∏ –∫–∞—Ç–µ–¥—Ä–∞—Ç–∞ (–∫–æ—è—Ç–æ –µ —Å —Ä–∞–∑–º–µ—Ä 160 –Ω–∞ 120 cm) —Å–µ –≥—É–±—è—Ç —Ç–æ—á–Ω–æ 2 —Ä–∞–±–æ—Ç–Ω–∏ –º–µ—Å—Ç–∞.
// –ù–∞–ø–∏—à–µ—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–∞, –∫–æ—è—Ç–æ –≤—ä–≤–µ–∂–¥–∞ —Ä–∞–∑–º–µ—Ä–∏ –Ω–∞ —É—á–µ–±–Ω–∞—Ç–∞ –∑–∞–ª–∞ –∏ –∏–∑—á–∏—Å–ª—è–≤–∞ –±—Ä–æ—è —Ä–∞–±–æ—Ç–Ω–∏ –º–µ—Å—Ç–∞
// –≤ –Ω–µ—è –ø—Ä–∏ –æ–ø–∏—Å–∞–Ω–æ—Ç–æ —Ä–∞–∑–ø–æ–ª–æ–∂–µ–Ω–∏–µ (–≤–∂. —Ñ–∏–≥—É—Ä–∞—Ç–∞).

// input: —á–µ—Ç–∞—Ç se 2 —á–∏—Å–ª–∞, –ø–æ –µ–¥–Ω–æ –Ω–∞ —Ä–µ–¥: w (–¥—ä–ª–∂–∏–Ω–∞ –≤ –º–µ—Ç—Ä–∏) –∏ h (—à–∏—Ä–æ—á–∏–Ω–∞ –≤ –º–µ—Ç—Ä–∏).
// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è->  3 ‚â§ h ‚â§ w ‚â§ 100.

// output: –±—Ä–æ—è—Ç –º–µ—Å—Ç–∞ –≤ —É—á–µ–±–Ω–∞—Ç–∞ –∑–∞–ª–∞

// function trainingLab(input) {
//     let w = Number(input[0]);
//     let h = Number(input[1]);

//     let wInCm = w * 100;
//     let hInCm = h * 100;

//     let rows = wInCm / 120;
//     let columns = (hInCm - 100) / 70;

//     let seats = (rows * columns) - 3;

//     console.log(Math.trunc(seats));

// }

// trainingLab(["8.4","5.2"]);

// function inputHall([width, len]) {
//     let rows = ~~(width * 100 / 120)
//     let desk = ~~((len * 100 - 100) / 70)
//     let allPlace = rows * desk - 3
//     console.log(allPlace);
//   }
//   inputHall([15, 8.9]);

// function trainingLab(input) {
//   let width = Number(input[0]);
//   let len = Number(input[1]);
//   let rows = Math.trunc(width * 100 / 120)
//   let desk = Math.trunc(((len * 100) - 100) / 70)
//   let allPlaces = rows * desk - 3
//   console.log(allPlaces)
// }
// trainingLab([15, 8.9]);

// –ü–ª–æ—â—Ç–∞ —Å–µ –ø—Ä–µ–≤—Ä—ä—â–∞ –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∏,  –≤–∞–¥–∏ —Å–µ –∫–æ—Ä–∏–¥–æ—Ä–∞, –ø–æ—Å–ª–µ —Å–µ –∏–∑—á–∏—Å–ª—è–≤–∞—Ç —Ä–µ–¥–æ–≤–µ—Ç–µ –∏ –±—é—Ä–æ—Ç–æ.
// –ù–∞–∫—Ä–∞—è –æ—Ç —Ä–µ–∑—É–ª—Ç–∞—Ç–∞ —Å–µ –º–∞—Ö–∞—Ç —Ç—Ä–∏ –º–µ—Å—Ç–∞ –∫—ä–¥–µ—Ç–æ –µ –≤—Ä–∞—Ç–∞—Ç–∞. –û–±—â–æ –≤–∑–µ—Ç–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–ª—É–ø–æ—Å—Ç–∏.
// –¢–æ–≤–∞ —Å Math.trunc –º–∞—Ö–∞ –¥—Ä–æ–±–Ω–∏—è—Ç –æ—Å—Ç–∞—Ç—ä–∫, –º–æ–∂–µ –¥–∞ —Å–µ –ø–æ–ª–∑–≤–∞—Ç –∏ –¥—Ä—É–≥–∏ –ø—Ä–∏–π–æ–º–∏  –∫–∞—Ç–æ:  parseInt(),
// –ø–æ–±–∏—Ç–æ–≤–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏ | ,  <<  –∏ —Ç.–Ω. , –∞–º–∞ —Ç–∏ —Å–µ –ø—Ä–∏–¥—ä—Ä–∂–∞–π –∫—ä–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –æ—Ç —É—Ä–æ—Ü–∏—Ç–µ.
// –ò–Ω–∞—á–µ –µ—Ç–æ —Ç–∏ –ø—Ä–∏–º–µ—Ä –∑–∞ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∑–∞–¥–∞—á–∞—Ç–∞  TrainingLab —Å –∏–∑–ø–æ–ª–∑–≤–∞–Ω–µ—Ç–æ –Ω–∞ –ø–æ–±–∏—Ç–æ–≤ –æ–ø–µ—Ä–∞—Ç–æ—Ä.üòÜ
// -->  ([w, h]) => (w * 100 / 120 | 0) * (((h * 100) - 100) / 70 | 0) - 3

function trainingLab(input) {
  let length = Number(input[0]) * 100;
  let width = Number(input[1]) * 100;

  let workplaceLength = 70;
  let workplaceWidth = 120;

  let hallWidthWorkplaces = Math.floor((width - 100) / workplaceLength);

  let hallLengthWorkplaces = Math.floor(length / workplaceWidth);

  let workplacesCount = hallWidthWorkplaces * hallLengthWorkplaces - 3;

  console.log(workplacesCount);
}

trainingLab(["8.4", "5.2"]);